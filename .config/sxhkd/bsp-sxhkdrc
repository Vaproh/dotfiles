#
# wm independent hotkeys
#

# terminal emulator
super + Return
	kitty

# program launcher
super + @space
	$HOME/.local/bin/scripts/launcher.sh

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# switch to other layouts
super + {ctrl + t,ctrl + y, shift + y,u, shift + u, w, shift + w, a}
    bsp-layout set {tiled,tall -- --master-size 0.5, rtall -- --master-size 0.5, wide, rwide, grid, rgrid, even}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# Hide/Unhide node
alt + h
	sh -c 'NHidden=$(bspc query -N -n .hidden -d focused); \
	if [ -z "$NHidden" ]; then bspc node focused -g hidden=on; \
	else bspc node "$NHidden" -g hidden=off; fi'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#
# Restart polybar
#

super + shift + r
    $HOME/.config/polybar/launch.sh

#
# Hide/Unhide Polybar
#

super + ctrl + shift + r
    $HOME/.local/bin/scripts/hide-show-poly.sh

#
# Function keys
#

# Audio function keys
XF86Audio{Lower,Raise}Volume
  $HOME/.local/bin/scripts/vap-vol-ctrl {decrease,increase}
XF86AudioMute
  $HOME/.local/bin/scripts/vap-vol-ctrl mute

# brightness function keys
XF86MonBrightness{Up,Down}
  $HOME/.local/bin/scripts/vap-brightness {increase,decrease}

# music control
# XF86Audio{Play,Stop,Prev,Next}
#   mpc -q {toggle,stop,prev,next}

# media control
XF86Audio{Play,Stop,Prev,Next}
  playerctl -s {play-pause,stop,prev,next}

# 
# Screenshots
#

{ctrl,shift} + Insert
  $HOME/.local/bin/scripts/{vap-cap-reg,vap-act-ss}

super + Insert
  $HOME/.local/bin/scripts/vap-ss

#
# Commands
#

super + shift + m
  kitty -e aerc

# super + p
#   $HOME/.local/bin/scripts/wm_power_menu

super + d 
  kitty -e yazi

super + v
  nitrogen

# super + v
  # $HOME/.local/bin/scripts/select_wall_nitrogen

# super + n
#   $HOME/.local/bin/scripts/new_look

super + alt + c 
  clipcat-menu

# rofi
super + {c, e}
  rofi -show {calc,emoji}

super + Home
  $HOME/.local/bin/scripts/power.sh

super + x
  kitty --class "spotify_player" --name "Spotify tui" -e spotify_player

# dmenu
# super + space
#   dmenu_run -c -l 20

#
# scratchpads
#

# drop down term
super + {_,shift +}Return
    tdrop -i -ma -w 70% -h 40% -y 5% -x 15% -n 0 --class scratch kitty --class=Scratch

super + z
    tdrop -i -ma -w 800 -h 600 -y 25% -x 30% --class Ncmpcpp kitty --name=MusicTerm --class=ncmpcpp -e ncmpcpp

